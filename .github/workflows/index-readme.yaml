name: Update README

on:
  push:
    branches:
      - main
    paths:
      - '-/*.md'
      - '!README.md'

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            -/*.md
            !README.md

      - name: Process changed files
        id: process
        run: |
          # Get the list of changed files
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          
          echo "CHANGED_FILES: $CHANGED_FILES"
          
          # Read current README
          README_CONTENT=$(cat README.md)
          
          # Process the file
          file="$CHANGED_FILES"
          if [ ! -f "$file" ]; then
            echo "Warning: File $file does not exist"
            exit 1
          fi
          
          # Extract title from filename (remove .md and any category prefix)
          filename=$(basename -- "$file")  # Get just the filename part
          TITLE=$(echo "$filename" | sed -E 's|\.md$||' | sed -E 's|^\[[^]]+\]\s*||')
          
          if [ -z "$TITLE" ]; then
            echo "Warning: Could not extract title from filename: $file"
            exit 1
          fi
          
          # Extract category from filename (format: [Category]...)
          CATEGORY=$(echo "$filename" | sed -n 's|.*\[\([^]]*\)\].*|\1|p')
          
          if [ -z "$CATEGORY" ]; then
            echo "Warning: Could not determine category from filename: $file"
            exit 1
          fi
          
          # Create new link
          LINK_BASE="https://github.com/eeeemune/Infra-Notes/blob/main/-/"
          ENCODED_FILENAME=$(echo "[$CATEGORY] $TITLE.md" | sed 's/ /%20/g')
          NEW_LINK="### [$TITLE]($LINK_BASE$ENCODED_FILENAME)\n"
          
          # Find the appropriate section
          CATEGORY_PATTERN="## ðŸ’› $CATEGORY"
          if [[ "$README_CONTENT" == *"$CATEGORY_PATTERN"* ]]; then
            # Insert new link after the category header
            README_CONTENT=$(echo "$README_CONTENT" | sed "/$CATEGORY_PATTERN/a\\$NEW_LINK")
          else
            # Create new category section
            NEW_SECTION="\n## ðŸ’› $CATEGORY\n$NEW_LINK"
            # Add new section at the end of the file
            README_CONTENT="$README_CONTENT$NEW_SECTION"
          fi
          
          # Transform the content of the markdown file
          if [ -f "$file" ]; then
            CONTENT=$(cat -- "$file")
            # Transform headings to bullet points with proper indentation
            TRANSFORMED_CONTENT=$(echo "$CONTENT" | sed -E '
              s/^# (.*)/- \1/;
              s/^## (.*)/  - \1/;
              s/^### (.*)/        - \1/
            ')
            # Append transformed content after the link
            README_CONTENT=$(echo "$README_CONTENT" | sed "/$NEW_LINK/a\\$TRANSFORMED_CONTENT")
          fi
          
          echo "README_CONTENT: $README_CONTENT"
          echo "CATEGORY: $CATEGORY"
          echo "TITLE: $TITLE"
          echo "NEW_LINK: $NEW_LINK"
          
          # Write updated README
          echo -e "$README_CONTENT" > README.md

      - name: Print README
        run: |
          cat README.md

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: update README with new links"
          file_pattern: README.md
          branch: main
